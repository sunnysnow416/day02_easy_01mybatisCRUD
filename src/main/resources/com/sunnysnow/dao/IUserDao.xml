<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunnysnow.dao.IUserDao">
    <!--配置查询所有 -->
    <select id="findAll" resultType="com.sunnysnow.domain.User">
        select * from user ;
    </select>

    <!--保存用户 -->
    <insert id="saveUser" parameterType="com.sunnysnow.domain.User" >
        <!-- 配置插入数据后，获取插入数据的id-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID();
        </selectKey>
        INSERT INTO USER (username,birthday,sex,address) VALUES(#{username},#{birthday},#{sex},#{address})
    </insert>

    <!--更新用户 -->
    <update id="updateUser" parameterType="com.sunnysnow.domain.User" >
        update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address} where id=#{id}
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id=#{id}
    </delete>

    <!--根据id查询用户-->
    <select id="findById" parameterType="Integer" resultType="com.sunnysnow.domain.User">
        select * from user where id=#{id}
    </select>

    <!--根据名字模糊查询用户-->
    <select id="findByName" parameterType="string" resultType="com.sunnysnow.domain.User">
    <!--预处理占位方式更安全，常用这个 -->
    select  * from  user where username like #{username}
    <!-- 这种是字符串拼接的方式，可以sal注入，一般不用。且下面的value是固定的不能换成别的-->
    <!--select  * from  user where username like '%${value}%'   -->
   </select>


   <!--查询总用户数-->
    <select id="findTotal" resultType="Integer">
        select COUNT(*) from  user;
    </select>

    <!--根据QueryVo的条件查询用户    -->
    <select id="findUserByVo" parameterType="com.sunnysnow.domain.QueryVo" resultType="com.sunnysnow.domain.User">
        <!--#{user.username}里的user.username是OGNL表达式写法：通过对象的取值方法来获取数据，写法上把get省略了 -->
        select  * from user where username like #{user.username}
    </select>
</mapper>